



import re

def find_phone_number(string, phone_number):
    # Remove spaces from the provided phone number
    phone_number = phone_number.replace(" ", "")

    # Define the regular expression pattern to match the phone number
    pattern = re.compile(re.escape(phone_number))

    # Search for the phone number pattern in the string
    match = pattern.search(string)

    if match:
        # Return the start and end index of the matched phone number
        return match.start(), match.end()
    else:
        return None

# Test data
string = "France: +33 1 23 45 67 89"
phone_number = "+33123456789"

# Find the phone number in the string
result = find_phone_number(string, phone_number)

if result:
    start_index, end_index = result
    print("Phone number found. Start index:", start_index, "End index:", end_index)
else:
    print("Phone number not found in the string.")





import phonenumbers
from postal_address_normalizer import AddressParser

def extract_sensitive_info(text):
    # Extract phone numbers using phonenumbers library
    phone_numbers = []
    for match in phonenumbers.PhoneNumberMatcher(text, None):
        phone_numbers.append(phonenumbers.format_number(match.number, phonenumbers.PhoneNumberFormat.E164))

    # Extract addresses using postal-address-normalizer library
    parser = AddressParser()
    parsed_addresses = parser.parse_address(text)
    addresses = []
    for addr in parsed_addresses:
        address = ', '.join(addr)
        addresses.append(address)

    return phone_numbers, addresses

def main():
    # Sample text
    text = "My name is Shahul, my mobile numbers are +1 (123) 456-7890 and +91 9876543210, and my addresses are 123 Main St, Anytown, USA and 456 Oak St, Othertown, India."

    try:
        # Extract sensitive information
        phone_numbers, addresses = extract_sensitive_info(text)

        # Print results
        print("Phone Numbers:", phone_numbers)
        print("Addresses:", addresses)
    except Exception as e:
        print("Error:", e)

if __name__ == "__main__":
    main()
String regex = "\\d+\\s+[^,]+,\\s+[^,]+,\\s+[^,]+,\\s+\\w{2,3}\\s*\\d{0,5}";




https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fsystem-test.onvue.com%2Fsystem_test%3Fcustomer%3Dpearson_vue%26clientcode%3DAWS%26candidate_id%3D304625309%26registration_id%3D459660878%26locale%3Den-US&data=05%7C01%7Cshahul.m%40infosys.com%7Cfee5aef098484724e31908dbb7a4fdc3%7C63ce7d592f3e42cda8ccbe764cff5eb6%7C0%7C0%7C638305691508662612%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=pHnsu4e8pXD21K%2B%2F30Kgvp7PsU4UbMevQCXxu8w%2FVls%3D&reserved=0

https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fexamlaunchpad.pearsonvue.com%2Fentry-point%2Flaunch-exam%2FAWS%2FOP%3FregistrationToken%3D9j3xrjq%252Furx4f4sNKIDK9twgI0T7%252FMcEV%252BUiNTZ4jZ%252BjXZm6k4Ojzd4hR%252FMSp5DvVEDxnBVIkuF5huxZU4j3qmZHvSlhGx2pgfyW%252FGgeZDVIfKhCr6YoTx1Vr%252BjDvTwkawopM5Xev7jBZHZD2xbOQg%253D%253D%26locale%3Den-US&data=05%7C01%7Cshahul.m%40infosys.com%7Cfee5aef098484724e31908dbb7a4fdc3%7C63ce7d592f3e42cda8ccbe764cff5eb6%7C0%7C0%7C638305691508662612%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=mt86cnaiGzMIWamlldsRy2stqncZEzMNA%2FpArHgjDKg%3D&reserved=0



............

https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fhome.pearsonvue.com%2Fonvuehelp&data=05%7C01%7Cshahul.m%40infosys.com%7Cfee5aef098484724e31908dbb7a4fdc3%7C63ce7d592f3e42cda8ccbe764cff5eb6%7C0%7C0%7C638305691508662612%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=b9ZF0LHopflMmE9Dg3wvirTSGDR6TvVlX0GU6H7Mpb8%3D&reserved=0
