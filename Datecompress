const datasetsList = [
  {
    data: [
      { x: new Date('2023-01-01'), y: 5 },
      { x: new Date('2023-02-05'), y: 8 },
    ],
  },
  {
    data: [
      { x: new Date('2023-02-02'), y: 3 },
      { x: new Date('2023-03-04'), y: 6 },
    ],
  },
];

// Step 1: Create a set of all unique dates across all datasets
const allDates = new Set();
datasetsList.forEach((dataset) => {
  dataset.data.forEach((point) => allDates.add(point.x.getTime()));
});

// Step 2: Incorporate missing dates within each data array
datasetsList.forEach((dataset) => {
  const missingDates = Array.from(allDates).filter((date) =>
    !dataset.data.some((point) => point.x.getTime() === date)
  );

  missingDates.forEach((missingDate) => {
    dataset.data.push({ x: new Date(missingDate), y: 0 });
  });

  dataset.data.sort((a, b) => a.x - b.x);
});

// Step 3: Sort data arrays within each object by x date
datasetsList.forEach((dataset) => {
  dataset.data.sort((a, b) => a.x - b.x);
});

// Step 4: Sort datasetsList by the sum of y values in data arrays
datasetsList.sort((a, b) => {
  const sumA = a.data.reduce((total, obj) => total + obj.y, 0);
  const sumB = b.data.reduce((total, obj) => total + obj.y, 0);
  return sumB - sumA;
});

console.log(datasetsList);
